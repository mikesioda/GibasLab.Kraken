#!/bin/bash
#PBS -N kraken_tp1_45to66
#PBS -l nodes=1:ppn=12
#PBS -l vmem=95GB
#PBS -l walltime=24:00:00
start=$(date +%s)
set -o errexit
module load jellyfish
module load kraken
FILES=/group/gibaslab/working_files/trimmed_reads/time_point_1/metagenome/*
OUT=/group/gibaslab/working_files/kraken_reports/tp1
KDB=/group/gibaslab/krakenDB
PRE=*Run_Sample_
TEST_SETS=()
index=1
testCount=0
skipCount=0
INDEX_LO=45
INDEX_HI=66
SKIP_SETS=()
echo SCRIPT EXECUTING KRAKEN ON TEST SETS: $INDEX_LO to $INDEX_HI
# populate TEST_SETS
for f in $FILES
do
	key=${f#*$PRE}
	key=${key:0:31}
	inTestSets=false
	inSkipSets=false

	# Is key already in TEST_SETS?
	if [ -z $TEST_SETS ]; then
		inTestSets=false
	else
		for item in ${TEST_SETS[@]}; do
			if [[ $key == $item ]]; then
				inTestSets=true	
			fi
		done
	fi

	# Is key already in SKIP_SETS?
	if [ -z $SKIP_SETS ]; then
		inSkipSets=false
	else
		for item in ${SKIP_SETS[@]}; do
			if [[ $key == $item ]]; then
				inSkipSets=true
			fi
		done
	fi
		
	# if set not already included & index is in range
	# add to TEST_SETS, increment count & index
	if [[ $inTestSets == false && $inSkipSets == false ]]; then
		if [[ $index -ge $INDEX_LO && $index -le $INDEX_HI ]]; then
			TEST_SETS[$testCount]=$key 
			echo adding key: $key
			((testCount+=1))
		else
			SKIP_SETS[$skipCount]=$key 
			((skipCount+=1))
		fi

		# Increment index if set added to SKIP or TEST SETS
		((index+=1)) 
	fi
done

# for each key value, find right & left
for testSet in ${TEST_SETS[@]}
do
	fileR1=null
	fileR2=null

	for f in $FILES
	do
		if [[ $f == *-paired* && $f == *_$testSet* ]]; then
			if [[ $f == *R1* ]]; then
				echo $i R1 is $f
				fileR1=$f
			elif [[ $f == *R2* ]]; then
				echo $i R2 is $f
				fileR2=$f
			else
				echo ERROR - $F IS NOT A PAIRED FILE - MISSING R1/R2
			fi
		fi
	done

	if [[ $fileR1 != null && $fileR2 != null ]]; then
		kraken --gzip-compressed --fastq-input --DB $KDB --paired $fileR1 $fileR2 > $OUT/$testSet.txt
		kraken-report --DB $KDB $OUT/$testSet.txt > $OUT/$testSet.report.txt
		chmod 775 $OUT/$testSet.*
	fi
done
echo KRAKEN REPORTS CREATED FOR TEST SETS: ${TEST_KEYS[@]}
end=$(date +%s)
runtime="$(($end - $start))"
echo SCRIPT COMPLETE: RUNTIME is $runtime seconds


















































































